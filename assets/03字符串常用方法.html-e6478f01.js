import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as a,b as c}from"./app-1ca4927b.js";const o={},t=c('<h3 id="操作方法" tabindex="-1"><a class="header-anchor" href="#操作方法" aria-hidden="true">#</a> 操作方法</h3><p>操作方法我们也是从<code>CRUD</code>(增删改查)的角度来看待的 <strong>其实可以将字符串看作是一种<code>string[]</code>,只是这种数组，不可以修改，只读</strong></p><h4 id="增加元素" tabindex="-1"><a class="header-anchor" href="#增加元素" aria-hidden="true">#</a> 增加元素</h4><ul><li><code>concat()</code>:连接字符串</li><li><code>模板字符串</code>:ES6新增的字符串拼接方法，使用反引号(``)来标识，变量使用<code>${}</code>来标识</li><li><code>+(加号)</code>：字符串拼接</li></ul><h4 id="删除元素" tabindex="-1"><a class="header-anchor" href="#删除元素" aria-hidden="true">#</a> 删除元素</h4><ul><li><code>slice(start,end)</code>:截取字符串,[start,end)</li><li><code>substr(start,length)</code>:截取字符串,[start,start+length)</li><li><code>substring(start,end)</code>:截取字符串,[start,end)</li></ul><p><strong>返回的都是一个新的string</strong></p><h4 id="修改元素" tabindex="-1"><a class="header-anchor" href="#修改元素" aria-hidden="true">#</a> 修改元素</h4><ul><li><code>trim()/trimLeft()/trimRight()</code>:去除字符串两端的空格</li><li><code>repeat(count)</code>:重复字符串，返回一个新的字符串</li><li><code>toLowerCase()/toUpperCase()</code>:将字符串转化为小写/大写</li><li><code>padStart(targetLength,padString)/padEnd(targetLength,padString)</code>:用<code>padString</code>填充字符串，使其长度为<code>targetLength</code></li></ul><h4 id="查找元素" tabindex="-1"><a class="header-anchor" href="#查找元素" aria-hidden="true">#</a> 查找元素</h4><ul><li><code>indexOf()</code>:查找字符串中是否包含<code>searchValue</code>,如果包含，返回第一次出现的位置，否则返回<code>-1</code></li><li><code>includes()</code>:查找字符串中是否包含<code>searchValue</code>,如果包含，返回<code>true</code>，否则返回<code>false</code></li><li><code>charAt(index)</code>:返回指定位置的字符</li></ul><h3 id="转换方法" tabindex="-1"><a class="header-anchor" href="#转换方法" aria-hidden="true">#</a> 转换方法</h3><p>将字符串转化为数组的方法：</p><ul><li><code>split(separator,limit)</code>:将字符串按照<code>separator</code>分割成数组，<code>limit</code>表示最大分割次数</li></ul><h3 id="模板匹配方法" tabindex="-1"><a class="header-anchor" href="#模板匹配方法" aria-hidden="true">#</a> 模板匹配方法</h3><p>其实就是进行正则匹配的方法</p><ul><li><code>match()</code>:返回匹配到的字符串数组</li><li><code>search()</code>:返回匹配到的第一个字符串的位置</li><li><code>replace()</code>:返回替换后的字符串</li></ul>',17),i=[t];function r(l,n){return d(),a("div",null,i)}const u=e(o,[["render",r],["__file","03字符串常用方法.html.vue"]]);export{u as default};
