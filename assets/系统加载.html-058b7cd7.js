import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,b as p}from"./app-14a5bd61.js";const t={},e=p(`<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3><p>在项目中，因为首页的一些数据需要在用户登录后才能获取，所以需要在用户登录后，再加载首页的数据。假如我们在登录成功后，直接跳转到首页，那么首页的数据还未加载，会导致页面显示不全，所以需要在首页加载完成后，再跳转到首页。这时候我们就需要一个系统加载的功能(Loading)。</p><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h3><h4 id="_1-使用-createapp-创建了两个-vue-实例" tabindex="-1"><a class="header-anchor" href="#_1-使用-createapp-创建了两个-vue-实例" aria-hidden="true">#</a> 1. 使用 createApp 创建了两个 vue 实例</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
loading<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#loading&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 当\`app\`组件加载好了之后，就可以销毁\`loading\`组件了。</span>
loading<span class="token punctuation">.</span><span class="token function">unmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>先挂载 loading 实例，再挂载 app 实例，这样就可以保证 loading 实例先加载，app 实例后加载。</strong></p>`,6),o=[e];function c(i,u){return a(),s("div",null,o)}const d=n(t,[["render",c],["__file","系统加载.html.vue"]]);export{d as default};
