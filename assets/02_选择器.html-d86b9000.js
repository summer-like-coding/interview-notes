import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as l,a as o}from"./app-c402f15f.js";const i={},c=o(`<h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><p>css 中选择器主要分为以下几种：</p><ul><li>元素选择器 <ul><li>普通元素选择器，类似<code>div</code>，<code>p</code></li><li>伪元素选择器，类似<code>::before</code>，<code>::after</code>，可以在里面插入内容</li></ul></li><li>类选择器 <ul><li>类选择器，类似<code>.class</code></li><li>伪类选择器,类似<code>:hover</code>，<code>:active</code>，可以在里面插入样式</li></ul></li><li>id 选择器，类似<code>#id</code></li><li>属性选择器，类似<code>[type=&quot;text&quot;]</code></li><li>通配符选择器，类似<code>*</code></li><li>后代选择器，类似<code>div p</code></li><li>子代选择器，类似<code>div &gt; p</code></li><li>兄弟选择器，类似<code>div + p</code></li><li>群组选择器，类似<code>div, p</code></li></ul><p>注意区分后代选择器和兄弟选择器的区别：</p><ul><li>后代选择器：<code>div p</code>,他会选择所有的<code>div</code>下的<code>p</code>元素，包括嵌套的<code>p</code>元素。</li><li>兄弟选择器：<code>div + p</code>,他会选择所有的<code>div</code>下的紧邻的<code>p</code>元素，不包括嵌套的<code>p</code>元素。</li></ul><h2 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h2><p>css 中的优先级是根据选择器的权重来决定的，权重越高，优先级越高。 主要原则就是：<code>ABCD</code>法则</p><ul><li><code>A</code>: 代表内联样式，权重为<code>1000</code></li><li><code>B</code>: 代表 id 选择器，权重为<code>100</code></li><li><code>C</code>: 代表类选择器，属性选择器，伪类选择器，权重为<code>10</code></li><li><code>D</code>: 代表元素选择器，伪元素选择器，权重为<code>1</code></li></ul><p>例子：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>#nav-global &gt; ul &gt; li &gt; a.nav-link<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>ABCD</code>法则计算权重：</p><ul><li><code>A</code>(内联样式): 0</li><li><code>B</code>(ID 选择器): 1</li><li><code>C</code>(Class 选择器+属性选择器): 1</li><li><code>D</code>(元素选择器): 3</li></ul><p>所以权重为<code>0113</code></p><h2 id="继承属性" tabindex="-1"><a class="header-anchor" href="#继承属性" aria-hidden="true">#</a> 继承属性</h2><p>css 中有一些属性是可以继承的</p><ul><li><p>字体类</p><ul><li><code>font-family</code></li><li><code>font-size</code></li><li><code>font-weight</code></li><li><code>font-style</code></li><li><code>font-variant</code></li><li><code>font</code></li></ul></li><li><p>文本类</p><ul><li><code>color</code>: 文本颜色</li><li><code>text-align</code>: 文本对齐方式</li><li><code>text-indent</code>: 首行缩进</li></ul></li><li><p>元素可见性</p><ul><li><code>visibility</code>: 元素是否可见</li></ul></li><li><p>表格类</p><ul><li><code>caption-side</code>: 表格标题的位置</li><li><code>empty-cells</code>: 是否显示表格中的空单元格</li><li><code>table-layout</code>: 表格的布局方式</li><li><code>border-collapse</code>: 表格边框是否合并</li></ul></li><li><p>列表类</p><ul><li><code>list-style-type</code>: 列表项标记的类型</li><li><code>list-style-position</code>: 列表项标记的位置</li><li><code>list-style-image</code>: 列表项标记的图像</li></ul></li></ul><p>其实只要记录一些比较特殊的不可继承属性就可以了，其他的都是可以继承的。</p><ul><li><p><code>display</code></p></li><li><p>文本类</p><ul><li><code>vertical-align</code>：垂直对齐方式</li><li><code>text-decoration</code>: 文本装饰,添加下划线，删除线等</li></ul></li><li><p>盒子类</p><ul><li><code>width</code>，<code>height</code>:宽高度</li><li><code>margin</code>，<code>padding</code>: 外边距，内边距</li><li><code>border</code>，<code>border-width</code>，<code>border-style</code>，<code>border-color</code>: 边框</li></ul></li><li><p>背景类</p></li><li><p><code>float</code>和<code>position</code>类</p></li></ul>`,18),t=[c];function a(p,s){return d(),l("div",null,t)}const u=e(i,[["render",a],["__file","02_选择器.html.vue"]]);export{u as default};
